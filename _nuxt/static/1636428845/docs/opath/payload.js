__NUXT_JSONP__("/docs/opath", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG){return {data:[{document:{slug:"opath",description:"Definition of object tree query language Opath",title:"Opath query language",category:"Docs",position:5,prev:"\u002Fdocs\u002Fmodel\u002F",next:"\u002Fdocs\u002Ftemplate\u002F",toc:[{id:L,depth:l,text:M},{id:N,depth:l,text:O},{id:P,depth:l,text:Q},{id:R,depth:l,text:S},{id:T,depth:l,text:U},{id:V,depth:l,text:W},{id:X,depth:l,text:Y},{id:Z,depth:l,text:_},{id:$,depth:l,text:aa},{id:ab,depth:l,text:ac},{id:ad,depth:l,text:ae},{id:af,depth:l,text:ag},{id:ah,depth:l,text:ai},{id:aj,depth:l,text:"Property \u002F element access wildcard operator *"},{id:ak,depth:l,text:"Property \u002F element access recursive descent operator **"},{id:al,depth:l,text:"Parent access operator ^"},{id:am,depth:l,text:"Ascendant access recursive operator ^**"},{id:an,depth:l,text:ao}],body:{type:t,children:[{type:b,tag:r,props:{},children:[{type:a,value:"Opath is a simple language for object tree lookup and transformation, similar to\n"},{type:b,tag:k,props:{href:"https:\u002F\u002Fwww.w3.org\u002FTR\u002Fxpath\u002F",rel:["nofollow","noopener","noreferrer"],target:"_blank"},children:[{type:a,value:"XPath"}]},{type:a,value:" in function."}]},{type:a,value:d},{type:b,tag:m,props:{id:L},children:[{type:b,tag:k,props:{href:"#data-types",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:M}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"All data types transferable through "},{type:b,tag:c,props:{},children:[{type:a,value:"json"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"yaml"}]},{type:a,value:" and "},{type:b,tag:c,props:{},children:[{type:a,value:"toml"}]},{type:a,value:" formats are supported."}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:u,props:{},children:[{type:a,value:ap}]},{type:a,value:" - empty value"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:u,props:{},children:[{type:a,value:"number"}]},{type:a,value:" - internally stored as either 64-bit integer or 64-bit float"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:u,props:{},children:[{type:a,value:"boolean"}]},{type:a,value:C},{type:b,tag:c,props:{},children:[{type:a,value:j}]},{type:a,value:E},{type:b,tag:c,props:{},children:[{type:a,value:aq}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:u,props:{},children:[{type:a,value:F}]},{type:a,value:" - strings are stored as UTF-8 encoded data."}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:u,props:{},children:[{type:a,value:"binary"}]},{type:a,value:" - binary data."}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:u,props:{},children:[{type:a,value:"object"}]},{type:a,value:" - object or map, can contain string-keyed properties"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:u,props:{},children:[{type:a,value:"array"}]},{type:a,value:" - array or sequence of elements"}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:m,props:{id:N},children:[{type:b,tag:k,props:{href:"#literals",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:O}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"123"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"-2"}]},{type:a,value:" - 64-bit integer values"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"1.13"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:".e10"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"-1E-2"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:".3"}]},{type:a,value:" - 64-bit float values"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"'id'"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"\"id\""}]},{type:a,value:" - string values"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:aq}]},{type:a,value:" - boolean values"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:ap}]},{type:a,value:" - null value"}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:m,props:{id:P},children:[{type:b,tag:k,props:{href:"#type-conversions",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:Q}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"Same as ECMAScript, integers are promoted to floats when mixed operands are used."}]},{type:a,value:d},{type:b,tag:m,props:{id:R},children:[{type:b,tag:k,props:{href:"#mathematical-operators",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:S}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"Typical mathematical operators and parentheses are supported."}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"2 + 3"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@.count + 1"}]},{type:a,value:" - numerical addition"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"2 - 3"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@.count - 1"}]},{type:a,value:" - numerical subtraction"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"2 * 3"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@.count * 2"}]},{type:a,value:" - numerical multiplication"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"2 \u002F 3"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@.count \u002F 2"}]},{type:a,value:" - numerical division"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"2 + 6 \u002F 2"}]},{type:a,value:ar},{type:b,tag:c,props:{},children:[{type:a,value:"5"}]},{type:a,value:", as expected"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"(2 + 6) \u002F 2"}]},{type:a,value:ar},{type:b,tag:c,props:{},children:[{type:a,value:"4"}]}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"Internally, type conversion is avoided as long as possible, i.e. adding two integer values will yield integer sum."}]},{type:a,value:d},{type:b,tag:m,props:{id:T},children:[{type:b,tag:k,props:{href:"#string-concatenation",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:U}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"If any of the addition operands has a string value, addition will become string concatenation"}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"2 + \"3\""}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"\"2\" + 3"}]},{type:a,value:" - both expressions yield string value "},{type:b,tag:c,props:{},children:[{type:a,value:"\"23\""}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"\"John\" + \" \" + 'Doe'"}]},{type:a,value:G},{type:b,tag:c,props:{},children:[{type:a,value:"\"John Doe\""}]}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:m,props:{id:V},children:[{type:b,tag:k,props:{href:"#comparison-operators",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:W}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"2 \u003E 3"}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"2 \u003E= 3"}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"2 \u003C 3"}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"2 \u003C= 3"}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"2 == 3"}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"2 != 3"}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"'aaabbb' ^= 'aa'"}]},{type:a,value:C},{type:b,tag:c,props:{},children:[{type:a,value:j}]},{type:a,value:" if left string operand starts with right string operand"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"'aaabbb' *= 'aa'"}]},{type:a,value:C},{type:b,tag:c,props:{},children:[{type:a,value:j}]},{type:a,value:" if left string operand contains right string operand"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"'aaabbb' $= 'bb'"}]},{type:a,value:C},{type:b,tag:c,props:{},children:[{type:a,value:j}]},{type:a,value:" if left string operand ends with right string operand"}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:m,props:{id:X},children:[{type:b,tag:k,props:{href:"#logical-operators",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:Y}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"not true"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"!true"}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"true and true"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"true && true"}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"true or true"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"true || true"}]}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:m,props:{id:Z},children:[{type:b,tag:k,props:{href:"#number-ranges",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:_}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:":10"}]},{type:a,value:w},{type:b,tag:c,props:{},children:[{type:a,value:x}]},{type:a,value:y},{type:b,tag:c,props:{},children:[{type:a,value:z}]},{type:a,value:D}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"1:10"}]},{type:a,value:w},{type:b,tag:c,props:{},children:[{type:a,value:H}]},{type:a,value:y},{type:b,tag:c,props:{},children:[{type:a,value:z}]},{type:a,value:D}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"0:2:10"}]},{type:a,value:w},{type:b,tag:c,props:{},children:[{type:a,value:x}]},{type:a,value:y},{type:b,tag:c,props:{},children:[{type:a,value:z}]},{type:a,value:" (inclusive) with "},{type:b,tag:c,props:{},children:[{type:a,value:"2"}]},{type:a,value:" increments"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"5:-0.1:-1.4"}]},{type:a,value:" - floats in ranges are also supported"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"1..10"}]},{type:a,value:w},{type:b,tag:c,props:{},children:[{type:a,value:H}]},{type:a,value:y},{type:b,tag:c,props:{},children:[{type:a,value:z}]},{type:a,value:D}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"..10"}]},{type:a,value:w},{type:b,tag:c,props:{},children:[{type:a,value:x}]},{type:a,value:y},{type:b,tag:c,props:{},children:[{type:a,value:z}]},{type:a,value:D}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:m,props:{id:$},children:[{type:b,tag:k,props:{href:"#context",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:aa}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"Every "},{type:b,tag:c,props:{},children:[{type:a,value:"Opath"}]},{type:a,value:" expression is executed in the context of "},{type:b,tag:g,props:{},children:[{type:a,value:t}]},{type:a,value:" (denoted "},{type:b,tag:c,props:{},children:[{type:a,value:as}]},{type:a,value:") and "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:"\n(denoted "},{type:b,tag:c,props:{},children:[{type:a,value:A}]},{type:a,value:") elements. To access any element in the object tree, it's relation to\nthe "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:at},{type:b,tag:c,props:{},children:[{type:a,value:A}]},{type:a,value:") or "},{type:b,tag:g,props:{},children:[{type:a,value:t}]},{type:a,value:at},{type:b,tag:c,props:{},children:[{type:a,value:as}]},{type:a,value:") element needs to be defined, much like for\npaths in the filesystem are relative to the current directory, or filesystem root.\nFor expressions based at the "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" element, explicit denotion of "},{type:b,tag:c,props:{},children:[{type:a,value:A}]},{type:a,value:" can usually be omitted."}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.name"}]},{type:a,value:I},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:J}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:au}]},{type:a,value:" - same as above"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$.name"}]},{type:a,value:I},{type:b,tag:g,props:{},children:[{type:a,value:t}]},{type:a,value:J}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:m,props:{id:ab},children:[{type:b,tag:k,props:{href:"#indexing-for-arrays",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:ac}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"Array elements can be accessed with "},{type:b,tag:c,props:{},children:[{type:a,value:v}]},{type:a,value:" notation. Arrays are indexed starting from "},{type:b,tag:c,props:{},children:[{type:a,value:x}]},{type:a,value:B}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@[0]"}]},{type:a,value:" - returns the first element of the "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" array"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@[0, 1..3, 5]"}]},{type:a,value:" - arrays can be indexed by multiple comma-separated indices as well as ranges of indices"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@[-1,-2]"}]},{type:a,value:" - negative indices are calculated from the end of an array, "},{type:b,tag:c,props:{},children:[{type:a,value:"-1"}]},{type:a,value:" being the last element of an array"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@[3..]"}]},{type:a,value:" - when using ranges in array indexing expressions (inside "},{type:b,tag:c,props:{},children:[{type:a,value:v}]},{type:a,value:"), range ending value can be omitted,\nand it will be equal to the array length (number of array elements)"}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"Accessing array with out-of-bounds index values yields empty result. Accessing array element on a non-array\nand non-object type yields empty result."}]},{type:a,value:d},{type:b,tag:m,props:{id:ad},children:[{type:b,tag:k,props:{href:"#property-access-for-objects",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:ae}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"Properties in objects can be accessed with typical "},{type:b,tag:c,props:{},children:[{type:a,value:B}]},{type:a,value:E},{type:b,tag:c,props:{},children:[{type:a,value:v}]},{type:a,value:" notations."}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:au}]},{type:a,value:I},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:J}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@[name]"}]},{type:a,value:" - same as above, with "},{type:b,tag:c,props:{},children:[{type:a,value:v}]},{type:a,value:" notation"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"[name]"}]},{type:a,value:" - this is illegal!"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.\"name\""}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@[\"name\"]"}]},{type:a,value:" - property names can be quoted, and if so, can contain spaces and special characters"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:av}]},{type:a,value:" - this is string literal, not property access!"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.(first_name, last_name, age)"}]},{type:a,value:" - one can select a few properties with a single expression using parentheses"}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"Accessing an nonexistent property yields empty result. Accessing a property on a non-object type also yields\nempty result."}]},{type:a,value:d},{type:b,tag:m,props:{id:af},children:[{type:b,tag:k,props:{href:"#property-indexing-for-objects",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:ag}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"Every object can also be indexed as an array, where index value will correspond with property position within\nthe object. For example if "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" object will be:"}]},{type:a,value:d},{type:b,tag:"div",props:{className:["nuxt-content-highlight"]},children:[{type:b,tag:"pre",props:{className:["language-json","line-numbers"],dataLine:"numberLines: true"},children:[{type:b,tag:c,props:{},children:[{type:b,tag:h,props:{className:[s,K]},children:[{type:a,value:"{"}]},{type:a,value:aw},{type:b,tag:h,props:{className:[s,ax]},children:[{type:a,value:"\"first_name\""}]},{type:b,tag:h,props:{className:[s,ay]},children:[{type:a,value:az}]},{type:a,value:aA},{type:b,tag:h,props:{className:[s,F]},children:[{type:a,value:"\"John\""}]},{type:b,tag:h,props:{className:[s,K]},children:[{type:a,value:","}]},{type:a,value:aw},{type:b,tag:h,props:{className:[s,ax]},children:[{type:a,value:"\"last_name\""}]},{type:b,tag:h,props:{className:[s,ay]},children:[{type:a,value:az}]},{type:a,value:aA},{type:b,tag:h,props:{className:[s,F]},children:[{type:a,value:aB}]},{type:a,value:d},{type:b,tag:h,props:{className:[s,K]},children:[{type:a,value:"}"}]},{type:a,value:d}]}]}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"expression "},{type:b,tag:c,props:{},children:[{type:a,value:"@[1]"}]},{type:a,value:" will yield string value "},{type:b,tag:c,props:{},children:[{type:a,value:aB}]},{type:a,value:" (value of the secod property). Objects have strictly defined\nand stable insertion order of properties."}]},{type:a,value:d},{type:b,tag:m,props:{id:ah},children:[{type:b,tag:k,props:{href:"#property--element-filtering",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:ai}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"Properties in objects or elements in arrays can also be filtered with logical expressions inside "},{type:b,tag:c,props:{},children:[{type:a,value:v}]},{type:a,value:" notation."}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@[@.@key $= \"name\"]"}]},{type:a,value:G},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" element property values for which property name ends with "},{type:b,tag:c,props:{},children:[{type:a,value:av}]},{type:a,value:B}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@[@.@index \u003E= 3]"}]},{type:a,value:G},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" element properties \u002F elements with index greater or equal "},{type:b,tag:c,props:{},children:[{type:a,value:"3"}]}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"Note that inside the "},{type:b,tag:c,props:{},children:[{type:a,value:v}]},{type:a,value:" expression the "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" element ("},{type:b,tag:c,props:{},children:[{type:a,value:A}]},{type:a,value:") becomes the child of the outer element."}]},{type:a,value:d},{type:b,tag:m,props:{id:aj},children:[{type:b,tag:k,props:{href:"#property--element-access-wildcard-operator-",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:"Property \u002F element access wildcard operator "},{type:b,tag:c,props:{},children:[{type:a,value:"*"}]}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.*"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@[*]"}]},{type:a,value:aC},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" object or all elements of the "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" array, or\nempty result, depending on the "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" type"}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:m,props:{id:ak},children:[{type:b,tag:k,props:{href:"#property--element-access-recursive-descent-operator-",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:"Property \u002F element access recursive descent operator "},{type:b,tag:c,props:{},children:[{type:a,value:aD}]}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.**"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@[**]"}]},{type:a,value:aC},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" object, and recursively all of their properties in\ndepth-first descending order."}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.\"**\""}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@['**']"}]},{type:a,value:" - this will also proto.work as above."}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.**{1,4}"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@.**{,4}"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@.**{2}"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@.**{0,2}"}]},{type:a,value:"- optionally depth level range can be specified. The depth level\nis specified relative from the element being accessed ("},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" in those examples).\n"},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"if minimal depth level value is omitted, "},{type:b,tag:c,props:{},children:[{type:a,value:H}]},{type:a,value:" is assumed."}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"if maximal depth level is omitted, descend operator will be unbound from the top, i.e. will continue for all descendants."}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"if minimal depth level value is "},{type:b,tag:c,props:{},children:[{type:a,value:x}]},{type:a,value:", the result will also include accessed element itself."}]},{type:a,value:d}]},{type:a,value:d}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:m,props:{id:al},children:[{type:b,tag:k,props:{href:"#parent-access-operator-",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:"Parent access operator "},{type:b,tag:c,props:{},children:[{type:a,value:"^"}]}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@^"}]},{type:a,value:" - this yields parent element of the "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:aE}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.name^"}]},{type:a,value:" - if "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" element is an object and contains \"name\" property, this expression will yield\n"},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:aE}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:m,props:{id:am},children:[{type:b,tag:k,props:{href:"#ascendant-access-recursive-operator-",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:"Ascendant access recursive operator "},{type:b,tag:c,props:{},children:[{type:a,value:"^**"}]}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@^**"}]},{type:a,value:" - yields all ascendants of the "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" element, in order of decreasing depth. The last element will\nbe "},{type:b,tag:g,props:{},children:[{type:a,value:t}]},{type:a,value:B}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@^**{1,4}"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@^**{,4}"}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"@^**{2}"}]},{type:a,value:"- optionally recursive distance range can be specified, analogically like\nfor "},{type:b,tag:c,props:{},children:[{type:a,value:aD}]},{type:a,value:". The distance is specified relative from the element being accessed."}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:m,props:{id:an},children:[{type:b,tag:k,props:{href:"#metadata-attributes",ariaHidden:j,tabIndex:n},children:[{type:b,tag:h,props:{className:[o,p]},children:[]}]},{type:a,value:ao}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:"All elements contain readable metadata (attributes). Those attributes are accessed like regular properties, but with\nname prefixed with "},{type:b,tag:c,props:{},children:[{type:a,value:A}]},{type:a,value:" character."}]},{type:a,value:d},{type:b,tag:q,props:{},children:[{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.@index"}]},{type:a,value:" - index of "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" element in its parent (if the parent is an object, this will be the property position)"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.@key"}]},{type:a,value:" - property name of "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" element in its parent (for arrays this will be string value of index)"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.@level"}]},{type:a,value:" - distance from the "},{type:b,tag:g,props:{},children:[{type:a,value:t}]},{type:a,value:" element for "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" element,"}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.@kind"}]},{type:a,value:" - string value of "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" element's kind, either one of "},{type:b,tag:c,props:{},children:[{type:a,value:"\"null\""}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"\"boolean\""}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"\"number\""}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"\"string\""}]},{type:a,value:aF},{type:b,tag:c,props:{},children:[{type:a,value:aG}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"\"object\""}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"\"array\""}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.@file"}]},{type:a,value:" - string describing the file or file structure, "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" element was read from (if any), for instance\n"},{type:b,tag:c,props:{},children:[{type:a,value:"\"file\u003Cyaml\u003E:.\u002Fdata.yml\""}]},{type:a,value:B}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.@file_type"}]},{type:a,value:"- string with file type (if any), either "},{type:b,tag:c,props:{},children:[{type:a,value:"\"file\""}]},{type:a,value:E},{type:b,tag:c,props:{},children:[{type:a,value:"\"dir\""}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.@file_format"}]},{type:a,value:"- string with file format (if any), supported values are: "},{type:b,tag:c,props:{},children:[{type:a,value:"\"json\""}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"\"yaml\""}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"\"toml\""}]},{type:a,value:f},{type:b,tag:c,props:{},children:[{type:a,value:"\"text\""}]},{type:a,value:aF},{type:b,tag:c,props:{},children:[{type:a,value:aG}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.@file_path"}]},{type:a,value:"- string with file path (if any), for instance "},{type:b,tag:c,props:{},children:[{type:a,value:"\".\u002Fdata.yml\""}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.@file_name"}]},{type:a,value:"- string with file name (if any), for instance "},{type:b,tag:c,props:{},children:[{type:a,value:"\"data.yml\""}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.@file_stem"}]},{type:a,value:"- string with file stem (if any), for instance "},{type:b,tag:c,props:{},children:[{type:a,value:"\"data\""}]},{type:a,value:". For file names starting with "},{type:b,tag:c,props:{},children:[{type:a,value:"\".\""}]},{type:a,value:",\nlike "},{type:b,tag:c,props:{},children:[{type:a,value:"\".data.yml\""}]},{type:a,value:" stem will be "},{type:b,tag:c,props:{},children:[{type:a,value:"\".data\""}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.@file_ext"}]},{type:a,value:"- string with file extension (if any), for instance "},{type:b,tag:c,props:{},children:[{type:a,value:"\"yml\""}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"@.@path"}]},{type:a,value:" - path to the "},{type:b,tag:g,props:{},children:[{type:a,value:i}]},{type:a,value:" element from the "},{type:b,tag:g,props:{},children:[{type:a,value:t}]},{type:a,value:", for instance "},{type:b,tag:c,props:{},children:[{type:a,value:"\"$.nested.array[3]\""}]}]},{type:a,value:d}]}]},dir:"\u002Fen\u002Fdocs",path:"\u002Fen\u002Fdocs\u002Fopath",extension:".md",createdAt:"2021-11-08T20:19:09.573Z",updatedAt:"2021-11-09T02:48:19.129Z",to:"\u002Fdocs\u002Fopath"},prev:{title:"Data model",path:"\u002Fen\u002Fdocs\u002Fmodel",to:"\u002Fdocs\u002Fmodel"},next:{title:"Templates",path:"\u002Fen\u002Fdocs\u002Ftemplate",to:"\u002Fdocs\u002Ftemplate"}}],fetch:{},mutations:[]}}("text","element","code","\n","li",", ","strong","span","current","true","a",2,"h2",-1,"icon","icon-link","ul","p","token","root","em","[]"," - range from ","0"," (inclusive) to ","10","@","."," - "," (inclusive)"," or ","string"," - yields ","1"," - returns the value of property \"name\" from the "," element","punctuation","data-types","Data types","literals","Literals","type-conversions","Type conversions","mathematical-operators","Mathematical operators","string-concatenation","String concatenation","comparison-operators","Comparison operators","logical-operators","Logical operators","number-ranges","Number ranges","context","Context","indexing-for-arrays","Indexing for arrays","property-access-for-objects","Property access for objects","property-indexing-for-objects","Property indexing for objects","property--element-filtering","Property \u002F element filtering","property--element-access-wildcard-operator-","property--element-access-recursive-descent-operator-","parent-access-operator-","ascendant-access-recursive-operator-","metadata-attributes","Metadata (attributes)","null","false"," - yields value ","$"," (","name","\"name\"","\n   ","property","operator",":"," ","\"Doe\""," - yields all properties of the ","**"," element.",",\n","\"binary\"")));